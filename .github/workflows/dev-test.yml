name: Netree Client Pipeline
run-name: ${{github.actor}} launch Netree client pipeline
on: [push]
jobs:
    lint:
      # checkout code for github
      runs-on: ubuntu-latest
      steps:
        - run: echo "this job lints the codebase"
        - name: "get code using checkout"
          uses: actions/checkout@v4
        - name: Cache node dependencies
          id: yarn-cache-dir-path
          run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        - uses: actions/cache@v3
          id: yarn-cache
          with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
        - name: "install and lint code"
          run: |
            echo "installing and linting repo"
            ls
            pwd
            cd ./client
            yarn install
            echo "node modules installed successfully,. now linting..."
            yarn run lint
            echo "linting job completed"
    build:
      needs: lint
      runs-on: ubuntu-latest
      steps:
        - run: echo "starting build job. first checkout"
        - name: "checkout"
          uses: actions/checkout@v4
          # build code
        - name: build project
          run: |
            echo " initing package build"
            ls
            pwd
            cd ./client
            ls
            echo "now building"
            yarn install
            yarn run build
         # upload build files as artifact
        - name: upload artifact
          uses: actions/upload-artifact@v4.1.0
          with:
            name: Netree-client-artifact
            path: client/dist
    deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - run: echo "starting deploy process...."
        - name: Download a Build Artifact
          uses: actions/download-artifact@v4.1.1
          with:
            name: Netree-client-artifact
        - name: list artifact
          run: ls
        - name: deploy artifact
          run: echo "deploying artidfact in...."


            

